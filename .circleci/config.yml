version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:13.8.0
        auth:
          username: $DOCKERHUB_USERNAME  
          password: $DOCKERHUB_PASSWORD 
  aws:
    docker:
      - image: amazon/aws-cli
  python:
    docker:
      - image: python:3.9.0-alpine


jobs:
########CI #########
  install:
    executor: node
    steps:
    - checkout
    - run:
        name: npm install 
        working_directory: .
        command:  ls -la && npm install 
    - persist_to_workspace:
        root: .
        paths:
          - ./node_modules
  build:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: ng build
          working_directory: .
          command: npm run build
  test:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install junit coverage reporter
          working_directory: .
          command: npm install --save-dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          working_directory: .
          command: npm test -- --ci --runInBand --reporters=default --reporters=jest-junit && pwd && ls -la /tmp
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./test_results
      - store_test_results:
          path: ./test_results
      - store_artifacts:
          path: ./test_results

  analyze:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Check  against security vulnerabilities
          working_directory: .
          command: npm audit 
  

workflows:
  
  project:
    jobs:
      - install
      - build:
          requires:
            - install
      - test:
          requires:
            - build
      - analyze:
          requires:
            - build
      